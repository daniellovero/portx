{
  "openapi": "3.0.1",
  "info": { "title": "PaymentsRestApi definition", "version": "v@" },
  "paths": {
    "/payments": {
      "post": {
        "tags": ["payments-controller"],
        "summary": "Create a payment",
        "operationId": "postPayment",
        "parameters": [
          {
            "name": "idempotent-key",
            "in": "header",
            "description": "UUID version 4",
            "required": true,
            "schema": { "type": "string", "format": "uuid" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/Payment" }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "description": "Payment accepted",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Payment" }
              }
            }
          },
          "400": {
            "description": "Invalid body for payment supplied. Or invalid idempotent key"
          },
          "500": {
            "description": "Payment already exists. Or error while creating payment"
          }
        }
      }
    },
    "/payments/{id}": {
      "get": {
        "tags": ["payments-controller"],
        "summary": "Get a payment by its ID",
        "operationId": "getPaymentById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the payment to seek for",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          }
        ],
        "responses": {
          "200": {
            "description": "Payment found",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Payment" }
              }
            }
          },
          "404": { "description": "Payment not found" },
          "400": { "description": "Invalid id supplied" }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Payment": {
        "type": "object",
        "properties": {
          "id": { "type": "integer", "format": "int64", "readOnly": true },
          "amountPaid": { "$ref": "#/components/schemas/AmountPaid" },
          "originator": { "$ref": "#/components/schemas/Customer" },
          "beneficiary": { "$ref": "#/components/schemas/Customer" },
          "sender": { "$ref": "#/components/schemas/Account" },
          "receiver": { "$ref": "#/components/schemas/Account" },
          "status": {
            "type": "string",
            "enum": ["CREATED", "SENT", "ACCEPTED", "REJECTED"]
          }
        }
      },
      "Account": {
        "type": "object",
        "properties": {
          "accountNumber": { "type": "integer", "format": "int64" },
          "accountType": { "type": "string" }
        }
      },
      "AmountPaid": {
        "type": "object",
        "properties": {
          "amount": { "type": "number" },
          "currency": { "type": "string" }
        }
      },
      "Customer": {
        "type": "object",
        "properties": {
          "id": { "type": "integer", "format": "int64" },
          "name": { "type": "string" }
        }
      }
    }
  }
}
